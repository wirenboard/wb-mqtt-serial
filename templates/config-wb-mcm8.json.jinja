{% set title_en = title_en | default("WB-MCM8 (8-channel pulse counter)") -%}
{% set title_ru = title_ru | default("WB-MCM8 (8-канальный модуль счетных входов)") -%}
{% set device_type = device_type | default("WB-MCM8") -%}
{% set group = group | default("g-wb") -%}
{% set device_name = device_name | default("WB-MCM8") -%}
{% set device_id = device_id | default("wb-mcm8") -%}

{% set INPUTS_NUMBER = 8 -%}
{% set FIRST_INPUT = 1 -%}
{
    "title": "template_title",
    "device_type": "{{ device_type }}",
    "group": "{{ group }}",
    "device": {
        "name": "{{ device_name }}",
        "id": "{{ device_id }}",
        "max_read_registers": 0,
        "response_timeout_ms": 1,
        "frame_timeout_ms": 8,
        "enable_wb_continuous_read": true,

        "groups": [
            {% for in_num in range(FIRST_INPUT, INPUTS_NUMBER + 1) -%}
            {
                "title": "Input {{in_num}}",
                "id": "g_in{{in_num}}"
            },
            {
                "title": "Press Parameters",
                "id": "gg_in{{in_num}}_press_params",
                "group": "g_in{{in_num}}"
            },
            {
                "title": "input{{in_num}}_channels",
                "id": "gg_in{{in_num}}_channels",
                "group": "g_in{{in_num}}",
                "ui_options": {
                    "wb": {
                        "disable_title": true
                    }
                }
            },
            {% endfor -%}
            {
                "title": "Encoders",
                "id": "g_encoders"
            },
            {% for encoder_num in range(0, 3) -%}
            {
                "title": "Encoder {{encoder_num + 1}}",
                "id": "gg_encoder_{{encoder_num + 1}}",
                "group": "g_encoders"
            },
            {% endfor -%}
            {
                "title": "encoder_channels",
                "id": "gg_encoder_channels",
                "group": "g_encoders",
                "ui_options": {
                    "wb": {
                        "disable_title": true
                    }
                }

            },
            {
                "title": "General",
                "id": "g_general"
            },
            {
                "title": "HW Info",
                "id": "g_hw_info"
            }
        ],

        "parameters": {
            {% for in_num in range(FIRST_INPUT, INPUTS_NUMBER + 1) -%}
            "in{{in_num}}_mode": {
                "title": "Mode",
                "description": "mode_description",
                "address": {{9 + in_num - 1}},
                "reg_type": "holding",
                "enum": [0, 1],
                "default": 0,
                "enum_titles": [
                    "Counting and frequency measurement",
                    "Counting and press detection"
                ],
                "group": "g_in{{in_num}}",
                "order": 1
            },
            "in{{in_num}}_debounce_ms": {
                "title": "debounce_time_title",
                "description": "debounce_time_description",
                "address": {{20 + in_num - 1}},
                "reg_type": "holding",
                "min": 0,
                "max": 100,
                "default": 50,
                "group": "g_in{{in_num}}",
                "order": 2
            },
            "in{{in_num}}_lp_hold_time": {
                "group": "gg_in{{in_num}}_press_params",
                "title": "lp_hold_time_title",
                "description": "lp_hold_time_description",
                "order": 1,
                "address": {{1100 + in_num - 1}},
                "reg_type": "holding",
                "default": 1000,
                "min": 500,
                "max": 5000,
                "condition": "in{{in_num}}_mode==1"
            },
            "in{{in_num}}_secp_waiting_time": {
                "group": "gg_in{{in_num}}_press_params",
                "title": "secp_waiting_time_title",
                "description": "secp_waiting_time_description",
                "order": 2,
                "address": {{1140 + in_num - 1}},
                "reg_type": "holding",
                "default": 300,
                "min": 0,
                "max": 2000,
                "condition": "in{{in_num}}_mode==1"
            },
            {% endfor -%}
            {% for encoder_num in range(0, 2) -%}
            "encoder_{{encoder_num + 1}}_mode" : {
                "title": "Encoder connection type",
                "description": "encoder_{{encoder_num + 1}}_mode_description",
                "address": {{376 + encoder_num}},
                "reg_type": "holding",
                "enum": [0, 1, 2],
                "default": 0,
                "enum_titles": [
                    "Not used",
                    "AB type",
                    "ABZ type"
                ],
                "group": "gg_encoder_{{encoder_num + 1}}",
                "order": 1
            },
            "encoder_{{encoder_num + 1}}_ppr" : {
                "title": "Pulses per revolution (PPR)",
                "address": {{380 + encoder_num}},
                "reg_type": "holding",
                "default": 0,
                "min": 0,
                "group": "gg_encoder_{{encoder_num + 1}}",
                "order": 2,
                "condition": "encoder_{{encoder_num + 1}}_mode==2"
            },
            {% endfor -%}
            "encoder_3_mode" : {
                "title": "Mode",
                "description": "encoder_3_mode_description",
                "address": {{378}},
                "reg_type": "holding",
                "enum": [0, 1],
                "default": 0,
                "enum_titles": [
                    "Not used",
                    "AB type"
                ],
                "group": "gg_encoder_3",
                "order": 1
            },
            "baud_rate": {
                "title": "Baud rate",
                "description": "baud_rate_description",
                "address": 110,
                "reg_type": "holding",
                "enum": [96, 192, 384, 576, 1152],
                "default": 96,
                "enum_titles": [
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200"
                ],
                "group": "g_general",
                "order": 1
            }
        },

        "channels": [
            {% for in_num in range(FIRST_INPUT, INPUTS_NUMBER + 1) -%}
            {% set NO_SPORADIC_MODE = 0 -%}
            {% for s_en, s_cond in [
                ("false", "isDefined(in"~in_num~"_mode)==0||in"~in_num~"_mode=="~NO_SPORADIC_MODE),
                ("true", "isDefined(in"~in_num~"_mode)&&in"~in_num~"_mode!="~NO_SPORADIC_MODE),
            ] -%}
            {
                "name": "Input {{in_num}}",
                "reg_type": "discrete",
                "address": {{in_num - 1}},
                "type": "switch",
                "sporadic": {{s_en}},
                "condition": "{{s_cond}}",
                "group": "gg_in{{in_num}}_channels"
            },
            {
                "name": "Input {{in_num}} counter",
                "reg_type": "input",
                "format": "u32",
                "address": {{60 + (in_num - 1) * 2}},
                "type": "value",
                "sporadic": {{s_en}},
                "condition": "{{s_cond}}",
                "group": "gg_in{{in_num}}_channels"
            },
            {% endfor -%}
            {
                "name": "Input {{in_num}} freq",
                "reg_type": "input",
                "address": {{40 + (in_num - 1) * 2}},
                "type": "value",
                "format": "u32",
                "scale": 1.52588e-5,
                "round_to": 0.001,
                "enabled": false,
                "group": "gg_in{{in_num}}_channels",
                "condition": "in{{in_num}}_mode==0"
            },
            {
                "name": "Input {{in_num}} Single Press Counter",
                "reg_type": "input",
                "address": {{464 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{in_num}}_channels",
                "condition": "in{{in_num}}_mode==1"
            },
            {
                "name": "Input {{in_num}} Long Press Counter",
                "reg_type": "input",
                "address": {{480 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{in_num}}_channels",
                "condition": "in{{in_num}}_mode==1"
            },
            {
                "name": "Input {{in_num}} Double Press Counter",
                "reg_type": "input",
                "address": {{496 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{in_num}}_channels",
                "condition": "in{{in_num}}_mode==1"
            },
            {
                "name": "Input {{in_num}} Shortlong Press Counter",
                "reg_type": "input",
                "address": {{512 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{in_num}}_channels",
                "condition": "in{{in_num}}_mode==1"
            },
            {% endfor -%}
            {% for encoder_num in range(0, 2) -%}
            {
                "name": "Encoder {{encoder_num + 1}} position",
                "reg_type": "holding",
                "address": {{368 + (encoder_num * 2)}},
                "type": "value",
                "sporadic": false,
                "format": "s32",
                "group": "gg_encoder_channels",
                "condition": "encoder_{{encoder_num + 1}}_mode==1"
            },
            {
                "name": "Encoder {{encoder_num + 1}} revolutions",
                "reg_type": "holding",
                "address": {{368 + (encoder_num * 2)}},
                "type": "value",
                "sporadic": false,
                "format": "s16",
                "group": "gg_encoder_channels",
                "order": 1,
                "condition": "encoder_{{encoder_num + 1}}_mode==2"
            },
            {
                "name": "Encoder {{encoder_num + 1}} angle",
                "reg_type": "holding",
                "address": {{369 + (encoder_num * 2)}},
                "type": "value",
                "sporadic": false,
                "format": "s16",
                "group": "gg_encoder_channels",
                "order": 2,
                "condition": "encoder_{{encoder_num + 1}}_mode==2"
            },
            {% endfor -%}
            {
                "name": "Encoder 3 position",
                "reg_type": "holding",
                "address": 372,
                "type": "value",
                "sporadic": false,
                "format": "s32",
                "group": "gg_encoder_channels",
                "condition": "encoder_3_mode==1"
            },
            {
                "name": "Reset all counters",
                "reg_type": "holding",
                "address": 100,
                "type": "pushbutton",
                "group": "g_general"
            },
            {
                "name": "Serial",
                "reg_type": "input",
                "address": 270,
                "type": "text",
                "format": "u32",
                "group": "g_hw_info"
            },
            {
                "name": "FW Version",
                "reg_type": "input",
                "address": 250,
                "type": "text",
                "format": "string",
                "string_data_size": 16,
                "enabled": false,
                "group": "g_hw_info"
            },
            {
                "name": "Supply voltage",
                "reg_type": "input",
                "address": 121,
                "type": "voltage",
                "scale": 0.001,
                "enabled": false,
                "group": "g_hw_info"
            },
            {
                "name": "Uptime",
                "reg_type": "input",
                "address": 104,
                "format": "u32",
                "enabled": false,
                "group": "g_hw_info"
            },
            {
                "name": "Minimum Voltage Since Startup",
                "reg_type": "input",
                "address": 122,
                "scale": 0.001,
                "type": "voltage",
                "enabled": false,
                "group": "g_hw_info"
            },
            {
                "name": "MCU Temperature",
                "reg_type": "input",
                "address": 124,
                "type": "temperature",
                "format": "s16",
                "scale": 0.1,
                "enabled": false,
                "group": "g_hw_info"
            },
            {
                "name": "MCU Voltage",
                "reg_type": "input",
                "address": 123,
                "scale": 0.001,
                "type": "voltage",
                "enabled": false,
                "group": "g_hw_info"
            }
        ],
        "translations": {
            "en": {
                "template_title": "{{ title_en }}",
                "mode_description": "For press detection firmware v1.3.2 or newer is required",
                "baud_rate_description": "Make sure that communication with device is established before changing this parameter. Select required baud rate, save configuration and then change port baud rate to the same value.",
                "Uptime": "Uptime (s)",

                "lp_hold_time_title": "Long Press Time (ms)",
                "secp_waiting_time_title": "Second Press Waiting Time (ms)",
                "debounce_time_title": "Debounce Time (ms)",

                "lp_hold_time_description": "If press is longer than the specified time then it is long",
                "secp_waiting_time_description": "If there is no second press during the specified time then press is single. 0 - disables all presses except short and long. Adds a delay to the response to a short press",
                "debounce_time_description": "For press detection must be 5-10 times less than second press waiting time. Adds a delay to the response to presses",

                {% for encoder_num in range(0, 2) -%}
                    "encoder_{{encoder_num + 1}}_mode_description": "When disabled inputs {{(encoder_num * 3) + 1}}, {{(encoder_num * 3) + 2}} and {{(encoder_num * 3) + 3}} work as usual with own mode configuration. <br>AB mode use {{(encoder_num * 3) + 1}} and {{(encoder_num * 3) + 2}} inputs for represent position in pulses count only. Input {{(encoder_num * 3) + 3}} work as usual. <br>In ABZ mode input {{(encoder_num * 3) + 3}} connected to Z signal (one puls per revolution) and position represented in revolutions counter and angle (pulses in one turn) counter.",
                {% endfor -%}
                "encoder_3_mode_description": "When disabled inputs 7 and 8 work as usual with own mode configuration. <br>AB mode use 7 and 8 inputs for represent position in pulses count only."
            },
            "ru": {
                "template_title": "{{ title_ru }}",
                {% for in_num in range(FIRST_INPUT, INPUTS_NUMBER + 1) -%}
                "Input {{in_num}}": "Вход {{in_num}}",
                "Input {{in_num}} counter": "Счетчик {{in_num}}",
                "Input {{in_num}} freq": "Частота {{in_num}}",
                "Input {{in_num}} Single Press Counter": "Счетчик коротких нажатий входа {{in_num}}",
                "Input {{in_num}} Long Press Counter": "Счетчик длинных нажатий входа {{in_num}}",
                "Input {{in_num}} Double Press Counter": "Счетчик двойных нажатий входа {{in_num}}",
                "Input {{in_num}} Shortlong Press Counter": "Счетчик коротких, а затем длинных нажатий входа {{in_num}}",
                {% endfor -%}

                "General": "Общее",
                "HW Info": "Данные модуля",
                "Mode": "Режим работы",
                "Press Parameters": "Параметры нажатий",
                "Counting and frequency measurement": "Счет и измерение частоты",
                "Counting and press detection": "Счет и детектирование нажатий",
                "mode_description": "Для детектирования нажатий требуется прошивка v1.3.2 или новее",
                "Baud rate": "Скорость обмена",
                "baud_rate_description": "Перед изменением параметра убедитесь, что связь с устройством установлена. Выберите нужную скорость обмена, сохраните конфигурацию, а затем укажите в настройках порта эту же скорость.",

                "lp_hold_time_title": "Время длинного нажатия (мс)",
                "secp_waiting_time_title": "Время ожидания второго нажатия (мс)",
                "debounce_time_title": "Время подавления дребезга (мс)",

                "lp_hold_time_description": "Если нажатие длится больше указанного времени - считаем его длинным",
                "secp_waiting_time_description": "Если за указанное время второго нажатия не было - считаем нажатие одиночным. 0 - отключит все нажатия кроме короткого и длинного. Вносит задержку в реакцию на короткое нажатие",
                "debounce_time_description": "Для детектирования нажатий значение должно быть в 5-10 раз меньше, чем время ожидания второго нажатия. Вносит задержку в реакцию на нажатия",
                "Reset all counters": "Сбросить все счетчики",
                "Serial": "Серийный номер",
                "FW Version": "Версия прошивки",
                "Supply voltage": "Напряжение питания",
                "Uptime": "Время работы с момента включения (с)",
                "Minimum Voltage Since Startup": "Минимальное напряжение с момента включения",
                "MCU Temperature": "Температура МК",
                "MCU Voltage": "Напряжение питания МК",

                "Encoders": "Работа с энкодерами",
                "Encoder connection type": "Тип подключения энкодера",
                "Not used": "Не используется",
                "AB type": "2 сигнала, тип AB",
                "ABZ type": "3 сигнала, тип ABZ",
                {% for encoder_num in range(0, 3) -%}
                    "Encoder {{encoder_num + 1}}": "Энкодер {{encoder_num + 1}}",
                    "Encoder {{encoder_num + 1}} position": "Положение энкодера {{encoder_num + 1}}",
                    "Encoder {{encoder_num + 1}} revolutions": "Количество оборотов энкодера {{encoder_num + 1}}",
                    "Encoder {{encoder_num + 1}} angle": "Угол внутри оборота энкодера {{encoder_num + 1}}",
                {% endfor -%}
                {% for encoder_num in range(0, 2) -%}
                    "encoder_{{encoder_num + 1}}_mode_description": "Когда отключен, входы {{(encoder_num * 3) + 1}}, {{(encoder_num * 3) + 2}} и {{(encoder_num * 3) + 3}} работают как обычные входы со своими настройками режима. <br>В режиме AB входы {{(encoder_num * 3) + 1}} и {{(encoder_num * 3) + 2}} подключены к выходам A и B энкодера. Положение представляется как счетчик импульсов. Вход {{(encoder_num * 3) + 3}} работает как обычный вход. <br>В режиме ABZ вход {{(encoder_num * 3) + 3}} подключен к выходу Z энкодера (один импульс на оборот). Положение представляется как отдельный счетчик оборотов и отдельный счетчик угла внутри оборота.",
                {% endfor -%}
                "encoder_3_mode_description": "Когда отключен, входы 7 и 8 работают как обычные входы со своими настройками режима. <br>В режиме AB входы 7 и 8 подключены к выходам A и B энкодера. Положение представляется как счетчик импульсов.",
                "Pulses per revolution (PPR)": "Количество импульсов на один оборот. <br>Введите значение, указанное на энкодере."
            }
        }
    }
}

