{% set LP_INPUTS_NUMBER = 2 -%}
{% set INPUTS_NUMBER = 6 -%}
{% set FRONT_PANEL_BUTTONS_NUMBER = 2 -%}
{% set MMATRIX_OUTPUTS_NUMBER = 8 -%}
{% set OUTPUTS_NUMBER = 4 -%}

{% set BUTTON_1 = 1 -%}
{% set BUTTON_2 = 2 -%}

{% set OUT_NUM_K1 = 1 -%}
{% set OUT_NUM_K2 = 2 -%}
{% set OUT_NUM_ALARM = 3 -%}
{% set OUT_NUM_CLEANING_MODE = 4 -%}
{
    "title": "WB-MWAC_template_title",
    "device_type": "WB-MWAC-v2",
    "group": "g-wb",
    "device": {
        "name": "WB-MWAC-v2",
        "id": "wb-mwac-v2",
        "max_read_registers": 0,
        "response_timeout_ms": 1,
        "frame_timeout_ms": 8,
        "enable_wb_continuous_read": true,

        "groups": [
            {
                "title": "Counters",
                "id": "counters"
            },
            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            {
                "title": "Input F{{ in_num }}",
                "id": "input_f{{ in_num }}"
            },
            {
                "title": "Press Parameters",
                "id": "gg_in{{ in_num }}_press_params",
                "group": "input_f{{ in_num }}"
            },
            {
                "title": "Actions for outputs when the input is closed",
                "id": "gg_in{{ in_num }}_mapping_matrix_actions",
                "group": "input_f{{ in_num }}"
            },
            {% for out_num in range(1, OUTPUTS_NUMBER + 1) -%}
            {
                "title":
                {% if out_num == OUT_NUM_K1 %} "K1 actions",
                {% elif out_num == OUT_NUM_K2 %} "K2 actions",
                {% elif out_num == OUT_NUM_ALARM %} "Alarm actions",
                {% else %} "Cleaning mode actions",
                {% endif %}
                "id": "gg_in{{in_num}}_out{{out_num}}_button_actions",
                "group": "input_f{{in_num}}"
            },
            {% endfor -%}

            {
                "title": "input_f{{ in_num }}_channels",
                "id": "gg_in{{ in_num }}_channels",
                "group": "input_f{{ in_num }}",
                "ui_options": {
                    "wb": {
                        "disable_title": true
                    }
                }
            },
            {% endfor -%}

            {% for b_num in range(1, FRONT_PANEL_BUTTONS_NUMBER + 1) -%}
            {
                "title": "Button B{{ b_num }}",
                "id": "button_b{{ b_num }}"
            },
            {
                "title": "Press Parameters",
                "id": "gg_b{{ b_num }}_press_params",
                "group": "button_b{{ b_num }}"
            },
            {% for out_num in range(1, OUTPUTS_NUMBER + 1) -%}
            {
                "title":
                {%- if out_num == OUT_NUM_K1 %} "K1 actions",
                {% elif out_num == OUT_NUM_K2 %} "K2 actions",
                {% elif out_num == OUT_NUM_ALARM %} "Alarm actions",
                {% else %} "Cleaning mode actions",
                {% endif %}
                "id": "gg_b{{ b_num }}_out{{ out_num }}_button_actions",
                "group": "button_b{{ b_num }}"
            },
            {% endfor -%}
            {
                "title": "Indication for B{{ b_num }}",
                "id": "gg_b{{ b_num }}_indication",
                "group": "button_b{{ b_num }}"
            },

            {% endfor -%}
            {
                "title": "Outputs",
                "id": "outputs"
            },
            {
                "title": "Output Safe State",
                "description": "outputs_safe_state_description",
                "id": "gg_outputs_safe_state",
                "group": "outputs"
            },
            {
                "title": "Outputs group",
                "id": "gg_outputs_channels",
                "group": "outputs",
                "ui_options": {
                    "wb": {
                        "disable_title": true
                    }
                }
            },
            {
                "title": "Safety Mode",
                "description": "safety_mode_description",
                "id": "g_safety"
            },
            {
                "title": "Cleaning mode",
                "id": "cleaning_mode",
                "description": "cleaning_mode_description",
            },
            {
                "title": "Safety Behaviour",
                "description": "safety_behaviour_description",
                "id": "gg_safety_behaviour",
                "group": "g_safety"
            },
            {
                "title": "Inputs Control In Safety Mode",
                "id": "gg_safety_input_control",
                "description": "inputs_control_in_safety_mode_description",
                "group": "g_safety"
            },
            {
                "title": "General",
                "id": "general"
            },
            {
                "title": "HW Info",
                "id": "hw_info"
            }
        ],

        "parameters": {
            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            "in{{ in_num }}_mode": {
                "title": "Input F{{ in_num }} Mode",
                "description": "input_f_mode_description",
                "address": {{ 8 + in_num }},
                "reg_type": "holding",
                "enum": [3, 4, 5],
                "default": 5,
                "enum_titles": [
                    "control disabled",
                    "discrete input or button",
                    "leakage sensor"
                ],
                "group": "input_f{{ in_num }}",
                "order": 1
            },
            "in{{ in_num }}_debounce_ms": {
                "title": "Input F{{ in_num }} Debounce",
                "description": "debounce_description",
                "address": {{ 19 + in_num }},
                "reg_type": "holding",
                "min": 0,
                "max": 2000,
                "default": 50,
                "group": "input_f{{ in_num }}",
                "order": 2
            },
            "in{{in_num}}_lp_hold_time": {
                "group": "gg_in{{ in_num }}_press_params",
                "title": "lp_hold_time_title",
                "description": "lp_hold_time_description",
                "order": 1,
                "address": {{ 1100 + in_num - 1 }},
                "reg_type": "holding",
                "default": 1000,
                "min": 500,
                "max": 5000,
                "condition": "in{{in_num}}_mode==4"
            },
            "in{{in_num}}_secp_waiting_time": {
                "group": "gg_in{{in_num}}_press_params",
                "title": "secp_waiting_time_title",
                "description": "secp_waiting_time_description",
                "order": 2,
                "address": {{ 1140 + in_num - 1 }},
                "reg_type": "holding",
                "default": 300,
                "min": 0,
                "max": 2000,
                "condition": "in{{ in_num }}_mode==4"
            },

            {% for out_num in range(1, OUTPUTS_NUMBER) -%}
            "in{{ in_num }}_out{{ out_num }}_actions_20min": {
                "group": "gg_in{{ in_num }}_mapping_matrix_actions",
                "title": 
                    {%- if out_num == OUT_NUM_K1 %} "K1",
                    {%- elif out_num == OUT_NUM_K2 %} "K2",
                    {%- else %} "Alarm",
                    {%- endif %}
                "order": {{ out_num }},
                "address": {{ 864 + ((in_num - 1) * MMATRIX_OUTPUTS_NUMBER) + (out_num - 1) }},
                "reg_type": "holding",
                "default": 
                    {%- if out_num == OUT_NUM_ALARM %} 2,
                    {%- else %} 1,
                    {%- endif -%}
                {% if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": [
                    "do nothing",
                    "on"
                ],
                {% else %}
                "enum": [0, 1, 2],
                "enum_titles": [
                    "do nothing",
                    "off",
                    "on"
                ],
                {% endif -%}

                "condition": "in{{ in_num }}_mode==5"
            },
            {% endfor -%}

            {% for out_num in range(1, OUTPUTS_NUMBER + 1) -%}
            "in{{in_num}}_out{{out_num}}_contact_closure": {
                "group": "gg_in{{in_num}}_out{{out_num}}_button_actions",
                "title": "Contact closure",
                "order": 1,
                "address": {{ 864 + out_num - 1 + (in_num - 1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{ in_num }}_mode==4"
            },
            "in{{ in_num }}_out{{ out_num }}_contact_opening": {
                "group": "gg_in{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Contact opening",
                "order": 2,
                "address": {{ 800 + out_num - 1 + (in_num - 1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{in_num}}_mode==4"
            },
            "in{{ in_num }}_out{{ out_num }}_sp": {
                "group": "gg_in{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Short Press",
                "order": 3,
                "address": {{ 544 + out_num - 1 + (in_num - 1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{ in_num }}_mode==4"
            },
            "in{{in_num}}_out{{ out_num }}_lp": {
                "group": "gg_in{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Long Press",
                "order": 4,
                "address": {{ 608 + out_num - 1 + (in_num - 1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{ in_num }}_mode==4"
            },
            "in{{ in_num }}_out{{ out_num }}_dp": {
                "group": "gg_in{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Double Press",
                "order": 5,
                "address": {{ 672 + out_num - 1 + (in_num-1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{in_num}}_mode==4"
            },
            "in{{ in_num }}_out{{out_num}}_slp": {
                "group": "gg_in{{in_num}}_out{{ out_num }}_button_actions",
                "title": "Short then long Press",
                "order": 6,
                "address": {{ 736 + out_num - 1 + (in_num-1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default": 0,
                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
                "condition": "in{{in_num}}_mode==4"
            },
            {% endfor -%}

            {% endfor -%}

            {% for in_num in range(1, FRONT_PANEL_BUTTONS_NUMBER + 1) -%}
            "b{{ in_num }}_debounce_ms": {
                "title": "Button B{{ in_num }} Debounce",
                "description": "debounce_description",
                "address": {{ 19 + INPUTS_NUMBER + in_num }},
                "reg_type": "holding",
                "min": 0,
                "max": 2000,
                "default": 50,
                "group": "button_b{{ in_num }}",
                "order": 2
            },
            "b{{ in_num }}_lp_hold_time": {
                "group": "gg_b{{in_num}}_press_params",
                "title": "lp_hold_time_title",
                "description": "lp_hold_time_description",
                "order": 1,
                "address": {{ 1100 + 6 + in_num - 1 }},
                "reg_type": "holding",
                "default": 1000,
                "min": 500,
                "max": 5000
            },
            "b{{ in_num }}_secp_waiting_time": {
                "group": "gg_b{{in_num}}_press_params",
                "title": "secp_waiting_time_title",
                "description": "secp_waiting_time_description",
                "order": 2,
                "address": {{ 1140 + 6 + in_num - 1 }},
                "reg_type": "holding",
                "default": 300,
                "min": 0,
                "max": 2000
            },

            {% for out_num in range(1, OUTPUTS_NUMBER + 1) -%}
            "b{{ in_num }}_out{{ out_num }}_sp": {
                "group": "gg_b{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Short Press",
                "order": 1,
                "address": {{ 544 + out_num - 1 + (6 + in_num-1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default":
                {%- if in_num == BUTTON_1 and (out_num == OUT_NUM_K1 or out_num == OUT_NUM_K2) %} 3,
                {% elif in_num == BUTTON_2 and out_num == OUT_NUM_ALARM %} 2,
                {% else %} 0,
                {% endif -%}

                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
            },
            "b{{ in_num }}_out{{ out_num }}_lp": {
                "group": "gg_b{{ in_num }}_out{{ out_num }}_button_actions",
                "title": "Long Press",
                "order": 2,
                "address": {{ 608 + out_num - 1 + (6 + in_num-1) * MMATRIX_OUTPUTS_NUMBER }},
                "reg_type": "holding",
                "default":
                {%- if in_num == BUTTON_2 and out_num == OUT_NUM_CLEANING_MODE %} 3,
                {% else %} 0,
                {% endif -%}

                {%- if out_num == OUT_NUM_ALARM %}
                "enum": [0, 2],
                "enum_titles": ["do nothing", "off"],
                {% else %}
                "enum": [0, 1, 2, 3],
                "enum_titles": ["do nothing", "off", "on", "toggle"],
                {% endif -%}
            },
            {% endfor -%}

            "b{{ in_num }}_indication": {
                "title": "Color",
                "address": {{ 953 + in_num }},
                "reg_type": "holding",
                "enum": [0, 1, 2, 3, 4],
                "default":
                {%- if in_num == BUTTON_1 %} 1,
                {% elif in_num == BUTTON_2 %} 4,
                {% endif -%}
                "enum_titles": [
                    "do not use",
                    "green",
                    "red",
                    "green blinking",
                    "red blinking"
                ],
                "group": "gg_b{{ in_num }}_indication",
                "order": 1
            },
            "b{{ in_num }}_indication_action": {
                "title": "State",
                "address": {{ 956 + in_num }},
                "reg_type": "holding",
                "enum": [0, 1, 2, 3, 4, 5],
                "default":
                {%- if in_num == BUTTON_1 %} 2,
                {% elif in_num == BUTTON_2 %} 5,
                {% endif -%}
                "enum_titles": [
                    "K1 on",
                    "K2 on",
                    "K1 and K2 on",
                    "K1 or(exclusive) K2 on",
                    "cleaning mode is active",
                    "alarm is active"
                ],
                "group": "gg_b{{ in_num }}_indication",
                "order": 2
            },

            {% endfor -%}

            "outputs_restore_state": {
                "title": "Outputs State After Power On",
                "address": 6,
                "reg_type": "holding",
                "enum": [0, 1],
                "default": 0,
                "enum_titles": ["Safe state", "Restore last state"],
                "group": "outputs",
                "order": 1
            },
            "safety_timer_s": {
                "title": "Safety Timer (s)",
                "description": "poll_timeout_description",
                "address": 8,
                "reg_type": "holding",
                "default": 3600,
                "group": "g_safety",
                "order": 2
            },
            "baud_rate": {
                "title": "Baud rate",
                "description": "baud_rate_description",
                "address": 110,
                "reg_type": "holding",
                "enum": [96, 192, 384, 576, 1152],
                "default": 96,
                "enum_titles": [
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200"
                ],
                "group": "general",
                "order": 1
            },

            {% for out_num in range(1, OUTPUTS_NUMBER) -%}
            "out{{ out_num }}_safe_state": {
                "title": {%if out_num == OUT_NUM_ALARM %}"Alarm"{% else %}"K{{ out_num }}"{% endif %},
                "group": "gg_outputs_safe_state",
                "order": {{ out_num }},
                "address": {{ 930 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1],
                "enum_titles": [
                    "Off",
                    "On"
                ]
            },
            "out{{ out_num }}_safety_behaviour": {
                "title": {%if out_num == OUT_NUM_ALARM %}"Alarm"{% else %}"K{{ out_num }}"{% endif %},
                "group": "gg_safety_behaviour",
                "order": {{ out_num }},
                "address": {{ 938 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1],
                "enum_titles": [
                    "Don't сhange output state",
                    "Switch output to safety state"
                ]
            },
            "out{{ out_num }}_safety_input_control": {
                "title": {%if out_num == OUT_NUM_ALARM %}"Alarm"{% else %}"K{{ out_num }}"{% endif %},
                "group": "gg_safety_input_control",
                "order": {{ out_num }},
                "address": {{ 946 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1, 2],
                "enum_titles": [
                    "Don't change",
                    "Disable in safety mode",
                    "Enable only in safety mode"
                ]
            },
            {% endfor -%}

            {% for lp_in_num in range(1, LP_INPUTS_NUMBER + 1) -%}
            "P{{ lp_in_num }}_counter_offset": {
                "title": "P{{ lp_in_num }} Counter Offset",
                "description": "counter_offset_description",
                "address": {{ 312 + 2 * (lp_in_num - 1) }},
                "reg_type": "holding",
                "format": "u32",
                "min": 0,
                "max": 4294967295,
                "default": 0,
                "group": "counters",
                "order": {{ lp_in_num }}
            },
            {% endfor -%}

            "cleaning_mode_timer_min": {
                "title": "Cleaning mode timer",
                "description": "cleaning_mode_timer_description",
                "address": 975,
                "reg_type": "holding",
                "min": 1,
                "max": 1440,
                "default": 30,
                "group": "cleaning_mode",
                "order": 1
            },
        },

        "channels": [
            {% for lp_in_num in range(1, LP_INPUTS_NUMBER + 1) -%}
            {
                "name": "P{{ lp_in_num }}",
                "reg_type": "discrete",
                "address": {{ 9 + lp_in_num }},
                "type": "switch",
                "sporadic": false,
                "group": "counters"
            },
            {
                "name": "P{{ lp_in_num }} Counter",
                "reg_type": "input",
                "address": {{ 316 + 2 * (lp_in_num - 1) }},
                "type": "value",
                "format": "u32",
                "group": "counters"
            },
            {% endfor -%}

            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            {
                "name": "F{{ in_num }}",
                "reg_type": "discrete",
                "address": {{ in_num - 1 }},
                "type": "switch",
                "sporadic": true,
                "condition": "isDefined(in{{ in_num }}_mode)&&in{{ in_num }}_mode!=3",
                "group": "gg_in{{ in_num }}_channels"
            },
            {
                "name": "F{{ in_num }}",
                "reg_type": "discrete",
                "address": {{ in_num - 1 }},
                "type": "switch",
                "sporadic": false,
                "condition": "isDefined(in{{ in_num }}_mode)==0||in{{ in_num }}_mode==3",
                "group": "gg_in{{ in_num }}_channels"
            },
            {
                "name": "F{{ in_num }} Counter",
                "reg_type": "input",
                "address": {{ 31 + in_num}},
                "type": "value",
                "sporadic": true,
                "condition": "isDefined(in{{ in_num }}_mode)&&in{{ in_num }}_mode!=3",
                "group": "gg_in{{ in_num }}_channels"
            },
            {
                "name": "F{{ in_num }} Counter",
                "reg_type": "input",
                "address": {{ 31 + in_num }},
                "type": "value",
                "sporadic": false,
                "condition": "isDefined(in{{ in_num }}_mode)==0||in{{ in_num }}_mode==3",
                "group": "gg_in{{ in_num }}_channels"
            },
            {
                "name": "Input F{{ in_num }} sensor performance (only for Larnitech sensors)",
                "reg_type": "input",
                "address": {{ 1070 + in_num }},
                "type": "switch",
                "sporadic": false,
                "enabled": false,
                "condition": "in{{ in_num }}_mode==5",
                "group": "gg_in{{ in_num }}_channels"
            },
            {
                "name": "Input {{in_num}} Single Press Counter",
                "enabled": false,
                "reg_type": "input",
                "address": {{ 464 + in_num - 1 }},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{ in_num }}_channels",
                "condition": "in{{ in_num }}_mode==4"
            },
            {
                "name": "Input {{in_num}} Long Press Counter",
                "enabled": false,
                "reg_type": "input",
                "address": {{ 480 + in_num - 1 }},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{ in_num }}_channels",
                "condition": "in{{in_num}}_mode==4"
            },
            {
                "name": "Input {{in_num}} Double Press Counter",
                "enabled": false,
                "reg_type": "input",
                "address": {{ 496 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{ in_num }}_channels",
                "condition": "in{{in_num}}_mode==4"
            },
            {
                "name": "Input {{in_num}} Shortlong Press Counter",
                "enabled": false,
                "reg_type": "input",
                "address": {{ 512 + in_num - 1}},
                "type": "value",
                "sporadic": true,
                "group": "gg_in{{ in_num }}_channels",
                "condition": "in{{in_num}}_mode==4"
            },            
            {% endfor -%}

            {% for out_num in range(1, OUTPUTS_NUMBER - 1) -%}
            {
                "name": "K{{ out_num }}",
                "reg_type": "coil",
                "address": {{ out_num - 1 }},
                "type": "switch",
                "sporadic": true,
                "group": "gg_outputs_channels"
            },
            {% endfor -%}

            {
                "name": "Alarm",
                "reg_type": "coil",
                "address": 2,
                "type": "switch",
                "sporadic": true,
                "group": "gg_outputs_channels"
            },
            {
                "name": "Cleaning mode",
                "reg_type": "coil",
                "address": 3,
                "type": "switch",
                "group": "cleaning_mode"
            },
            {
                "name": "Serial",
                "reg_type": "input",
                "address": 270,
                "type": "text",
                "format": "u32",
                "group": "hw_info"
            },
            {
                "name": "FW Version",
                "reg_type": "input",
                "address": 250,
                "type": "text",
                "format": "string",
                "string_data_size": 16,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Input Voltage",
                "reg_type": "input",
                "address": 121,
                "type": "voltage",
                "scale": 0.001,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Uptime",
                "reg_type": "input",
                "address": 104,
                "type": "text",
                "format": "u32",
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "MCU Temperature",
                "reg_type": "input",
                "address": 124,
                "type": "temperature",
                "format": "s16",
                "scale": 0.1,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "MCU Voltage",
                "reg_type": "input",
                "address": 123,
                "scale": 0.001,
                "type": "voltage",
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Battery freshness (2 — 0, measured at startup)",
                "reg_type": "input",
                "address": 118,
                "type": "value",
                "enabled": false,
                "sporadic": false,
                "group": "hw_info"
            },
            {
                "name": "Vout overloaded",
                "reg_type": "input",
                "address": 462,
                "type": "switch",
                "enabled": false,
                "sporadic": false,
                "group": "hw_info"
            }
        ],
        "translations": {
            "en": {
                "WB-MWAC_template_title": "WB-MWAC v.2 (water leak and meters controller)",
                "baud_rate_description": "Make sure that communication with device is established before changing this parameter. Select required baud rate, save configuration and then change port baud rate to the same value.",
                "Uptime": "Uptime (s)",

                "counter_offset_description": "0 — 4294967295 (32 bit)",

                "input_f_mode_description": "In leakage sensor mode, when the sensor is triggered, after 20 minutes, the module will perform a repeated poll and turn off the alarm if the cause of the triggering is eliminated.",

                "inputs_control_in_safety_mode_description": "Sets change of control from the inputs when module switches to safety mode. Does not affect \"leakage sensor\" mode.",
                "safety_mode_description": "When RS-485 connection is lost, the flood protection module will work autonomously. However, it is possible to set a certain state of the outputs in case of connection loss. For this purpose, there is a safety mode.",
                "safety_behaviour_description": "Safe state of outputs is configured on \"Outputs\" tab.",
                "outputs_safe_state_description": "Outputs state after module power on (if \"Switch output to safety state\" is selected in \"Outputs behaviour on power on\" setting), as well as in safety mode if transition to safety state is activated.",
                "poll_timeout_description": "Parameter defines the time of absence of polling in seconds, after which safety mode will be activated.",

                "cleaning_mode_description": "Cleaning mode is used to disable reactions on flood sensors when a room is being celaned. When started/stopped, a sound signal is emitted, and during the activity of the mode, the indicators of the inputs periodically flash briefly. Disabled automatically after the specified time.",
                "cleaning_mode_timer_description": "1 – 1440 min, 30 by default",

                "debounce_description": "For button press detection, the value must be 5 — 10 times less than the waiting time for the second press. Adds a delay to the response to presses. 0 – 2000 ms, 50 by default.",
                "lp_hold_time_title": "Long Press Time (ms)",
                "lp_hold_time_description": "If press is longer than the specified time then it is long. 500 — 5000 ms, 1000 by default.",
                "secp_waiting_time_title": "Second Press Waiting Time (ms)",
                "secp_waiting_time_description": "If there is no second press during the specified time then press is single. 0 — disables all presses except short and long. Adds a delay to the response to a short press. 0 — 2000 ms, 300 by default."
            },
            "ru": {
                "WB-MWAC_template_title": "WB-MWAC v.2 (модуль контроля протечек и расхода воды)",
                "Baud rate": "Скорость обмена",
                "baud_rate_description": "Перед изменением параметра убедитесь, что связь с устройством установлена. Выберите нужную скорость обмена, сохраните конфигурацию, а затем укажите в настройках порта эту же скорость.",

                "Counters": "Счетчики",
                "counter_offset_description": "0 — 4294967295 (32 бита)",

                "Cleaning mode": "Режим уборки",
                "cleaning_mode_description": "Режим уборки используется для отключения реакции на датчики протечки при уборке помещения. При запуске/остановке издаётся звуковой сигнал, во время активности режима, индикаторы входов периодически коротко моргают. Отключается автоматически по истечении указанного времени.",
                "cleaning_mode_timer_description": "1 — 1440 мин, 30 по умолчанию",
                "Cleaning mode timer": "Таймер режима уборки",

                {% for in_num in range(1, INPUTS_NUMBER + FRONT_PANEL_BUTTONS_NUMBER + 1) -%}
                "Input F{{ in_num }}": "Вход F{{ in_num }}",
                "Input F{{ in_num }} Mode": "Режим работы входа F{{ in_num }}",
                "Input F{{ in_num }} Debounce": "Время защиты от дребезга входа F{{ in_num }}",
                "Input {{in_num}} Single Press Counter": "Счетчик коротких нажатий входа F{{ in_num }}",
                "Input {{in_num}} Long Press Counter": "Счетчик длинных нажатий входа F{{ in_num }}",
                "Input {{in_num}} Double Press Counter": "Счетчик двойных нажатий входа F{{ in_num }}",
                "Input {{in_num}} Shortlong Press Counter": "Счетчик коротких, а затем длинных нажатий входа F{{ in_num }}",
                "F{{ in_num }} Counter": "Счетчик F{{ in_num }}",
                "Input F{{ in_num }} sensor performance (only for Larnitech sensors)":  "Работоспособность датчика на входе F{{ in_num }} (только для датчиков Larnitech)",
                {% endfor -%}

                "input_f_mode_description": "В режиме датчик протечки, при срабатывании датчика, через 20 минут будет произведён повторный опрос и выключение тревоги, в случае устранения причины срабатывания.",
                
                "control disabled": "управление отключено",
                "leakage sensor": "датчик протечки",
                "discrete input or button": "дискретный вход или кнопка",

                "Actions for outputs when the input is closed": "Действия для выходов при замыкании входа",

                {% for b_num in range(1, FRONT_PANEL_BUTTONS_NUMBER + 1) -%}
                "Button B{{ b_num }}": "Кнопка B{{ b_num }}",
                "Actions for outputs when the button is pressed": "Действия для выходов при нажатии кнопки",
                "Button B{{ b_num }} Mode": "Режим работы кнопки B{{ b_num }}",
                "Button B{{ b_num }} Debounce": "Время защиты от дребезга кнопки B{{ b_num }}",
                "Indication for B{{ b_num }}": "Индикация для кнопки B{{ b_num }}",
                {% endfor -%}

                "Color": "Цвет",
                "State": "Состояние",

                "do not use": "не использовать",
                "green": "зеленый",
                "red": "красный",
                "green blinking": "зеленый мигающий",
                "red blinking": "красный мигающий",

                "K1 on": "K1 включен",
                "K2 on": "K2 включен",
                "K1 and K2 on": "K1 и K2 включены",
                "K1 or(exclusive) K2 on": "K1 или(исключающее) K2 включен",
                "cleaning mode is active": "режим уборки активен",
                "alarm is active": "тревога активна",

                "Outputs": "Выходы",
                "General": "Общее",
                "HW Info": "Данные модуля",

                {% for lp_in_num in range(1, LP_INPUTS_NUMBER + 1) -%}
                "P{{ lp_in_num }} Counter": "Счетчик P{{ lp_in_num }}",
                "P{{ lp_in_num }} Counter Offset": "Начальное значение счетчика P{{ lp_in_num }}",
                {% endfor -%}

                "Alarm": "Авария",
                "Serial": "Серийный номер",
                "FW Version": "Версия прошивки",
                "Input Voltage": "Напряжение питания",
                "Uptime": "Время работы с момента включения (с)",
                "MCU Temperature": "Температура МК",
                "MCU Voltage": "Напряжение питания МК",
                "Battery freshness (2 — 0, measured at startup)": "Свежесть батарейки (2 — 0, измерено при загрузке)",
                "Vout overloaded": "Выход Vout перегружен",

                "do nothing": "нет действия",
                "off": "выключить",
                "on": "включить",
                "toggle": "переключить",

                "Outputs State After Power On": "Состояния выходов при подаче питания",
                "Safe state": "Перевести выход в безопасное состояние",
                "Restore last state": "Восстановить последнее состояние",
                "Output Safe State": "Безопасное состояние выходов",
                "Off": "Выключен",
                "On": "Включен",

                "Safety Mode": "Безопасный режим",
                "Safety Behaviour": "Действие в безопасном режиме",
                "Safety Timer (s)": "Таймаут безопасного режима (с)",
                "safety_mode_description": "При потере связи по RS-485 модуль защиты от протечек будет работать автономно. Однако есть возможность задать определенное состояние выходов в случае обрыва связи. Для этого существует безопасный режим.",
                "outputs_safe_state_description": "Состояние выходов после включения модуля (если в настройке \"Состояния выходов при подаче питания\" выбран пункт \"Перевести выход в безопасное состояние\"), а также в безопасном режиме, если переход в безопасное состояние активирован.",
                "poll_timeout_description": "Параметр определяет время отсутствия опроса в секундах, после которого будет активирован безопасный режим.",
                "safety_behaviour_description": "Безопасное состояние выходов настраивается на вкладке \"Выходы\".",
                "inputs_control_in_safety_mode_description": "Настройка изменения управления с входов при переходе модуля в безопасный режим. Не влияет на режим \"Датчик протечки\".",
                "Don't сhange output state": "Ничего не делать",
                "Switch output to safety state": "Перевести выход в безопасное состояние",
                "Inputs Control In Safety Mode": "Управление с входов в безопасном режиме",
                "Don't change": "Не блокировать",
                "Disable in safety mode": "Блокировать в безопасном режиме",
                "Enable only in safety mode": "Разрешить только в безопасном режиме",

                "Press Parameters": "Параметры нажатий",
                "debounce_description": "Для детектирования нажатий значение должно быть в 5 — 10 раз меньше, чем время ожидания второго нажатия. Вносит задержку в реакцию на нажатия. 0 — 2000 мс, 50 по умолчанию.",
                "lp_hold_time_title": "Время длинного нажатия (мс)",
                "lp_hold_time_description": "Если нажатие длится больше указанного времени — считаем его длинным. 500 — 5000 мс, 1000 по умолчанию.",
                "secp_waiting_time_title": "Время ожидания второго нажатия (мс)",
                "secp_waiting_time_description": "Если за указанное время второго нажатия не было — считаем нажатие одиночным. 0 — отключит все нажатия кроме короткого и длинного. Вносит задержку в реакцию на короткое нажатие. 0 — 2000 мс, 300 по умолчанию.",

                "Contact closure": "Замыкание контакта",
                "Contact opening": "Размыкание контакта",
                "Short Press": "Короткое нажатие",
                "Long Press": "Длинное нажатие",
                "Double Press": "Двойное нажатие",
                "Short then long Press": "Короткое, затем длинное нажатие",

                "K1 actions": "Действия для K1",
                "K2 actions": "Действия для K2",
                "Alarm actions": "Действия для тревоги",
                "Cleaning mode actions": "Действия для режима уборки"
            }
        }
    }
}
