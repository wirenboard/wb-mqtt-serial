{% set LP_INPUTS_NUMBER = 2 -%}
{% set INPUTS_NUMBER = 6 -%}
{% set OUTPUTS_NUMBER = 3 -%}
{
    "title": "WB-MWAC_template_title",
    "device_type": "WB-MWAC-v2",
    "group": "g-wb",
    "device": {
        "name": "WB-MWAC-v2",
        "id": "wb-mwac-v2",
        "max_read_registers": 0,
        "response_timeout_ms": 1,
        "frame_timeout_ms": 8,
        "enable_wb_continuous_read": true,

        "groups": [
            {
                "title": "Counters",
                "id": "counters"
            },
            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            {
                "title": "Input F{{ in_num }}",
                "id": "input_f{{ in_num }}"
            },
            {
                "title": "Actions for outputs when the input is closed / opened",
                "id": "gg_in{{ in_num }}_mapping_matrix_actions",
                "group": "input_f{{ in_num }}"
            },
            {% endfor -%}
            {
                "title": "Outputs",
                "id": "outputs"
            },
            {
                "title": "Output Safe State",
                "id": "gg_outputs_safe_state",
                "group": "outputs"
            },
            {
                "title": "Outputs group",
                "id": "gg_outputs_channels",
                "group": "outputs",
                "ui_options": {
                    "wb": {
                        "disable_title": true
                    }
                }
            },
            {
                "title": "Safety Mode",
                "id": "g_safety"
            },
            {
                "title": "Safety Behaviour",
                "id": "gg_safety_behaviour",
                "group": "g_safety"
            },
            {
                "title": "Inputs Control In Safety Mode",
                "id": "gg_safety_input_control",
                "description": "inputs_control_in_safety_mode_description",
                "group": "g_safety"
            },
            {
                "title": "General",
                "id": "general"
            },
            {
                "title": "HW Info",
                "id": "hw_info"
            }
        ],

        "parameters": {
            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            "in{{ in_num }}_mode": {
                "title": "Input F{{ in_num }} Mode",
                "address": {{ 8 + in_num }},
                "reg_type": "holding",
                "enum": [0, 1, 2, 3, 4, 5],
                "default": 5,
                "enum_titles": [
                    "push button",
                    "latching switch",
                    "turn off all outputs",
                    "control disabled",
                    "operate according to mapping-matrix",
                    "operate according to mapping-matrix, repeat action in 20 min if input still activated"
                ],
                "group": "input_f{{ in_num }}",
                "order": 1
            },
            "in{{ in_num }}_debounce_ms": {
                "title": "Input F{{ in_num }} Debounce (ms)",
                "address": {{ 19 + in_num }},
                "reg_type": "holding",
                "min": 0,
                "max": 2000,
                "default": 50,
                "group": "input_f{{ in_num }}",
                "order": 2
            },
            {% for i in range(2) -%}
            {% for out_num in range(1, OUTPUTS_NUMBER + 1) -%}
            {% if i == 0 %} "in{{ in_num }}_out{{ out_num }}_actions": { {% else %} "in{{ in_num }}_out{{ out_num }}_actions_20min": { {% endif %}
                "group": "gg_in{{ in_num }}_mapping_matrix_actions",
                "title": {% if out_num == 1 %}"K1"{% elif out_num == 2 %}"K2"{% else %}"Alarm"{% endif %},
                "order": {{ out_num }},
                "address": {{ 384 + ((in_num - 1) * 8) + (out_num - 1) }},
                "reg_type": "holding",
                "default": {% if out_num == 3 %}8{% else %}4{% endif %},
                "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                "enum_titles": [
                    "no action / no action",
                    "no action / reset",
                    "no action / set",
                    "no action / toggle",

                    "reset / no action",
                    "reset / reset",
                    "reset / set",
                    "reset / toggle",

                    "set / no action",
                    "set / reset",
                    "set / set",
                    "set / toggle",

                    "toggle / no action",
                    "toggle / reset",
                    "toggle / set",
                    "toggle / toggle"
                ],
                "condition": "in{{ in_num }}_mode=={{ 4 + i }}"
            },
            {% endfor -%}
            {% endfor -%}
            {% endfor -%}

            "outputs_restore_state": {
                "title": "Restore Last Outputs State After Power On",
                "address": 6,
                "reg_type": "holding",
                "enum": [0, 1],
                "default": 0,
                "enum_titles": ["no", "yes"],
                "group": "outputs",
                "order": 1
            },
            "safety_timer_s": {
                "title": "Safety Timer (s)",
                "address": 8,
                "reg_type": "holding",
                "default": 3600,
                "group": "g_safety",
                "order": 2
            },
            "baud_rate": {
                "title": "Baud rate",
                "description": "baud_rate_description",
                "address": 110,
                "reg_type": "holding",
                "enum": [96, 192, 384, 576, 1152],
                "default": 96,
                "enum_titles": [
                    "9600",
                    "19200",
                    "38400",
                    "57600",
                    "115200"
                ],
                "group": "general",
                "order": 1
            },
            {% for out_num in range(1, OUTPUTS_NUMBER) -%}
            "out{{ out_num }}_safe_state": {
                "title": "K{{ out_num }}",
                "group": "gg_outputs_safe_state",
                "order": {{ out_num }},
                "address": {{ 930 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1],
                "enum_titles": [
                    "Off",
                    "On"
                ]
            },
            "out{{ out_num }}_safety_behaviour": {
                "title": "K{{ out_num }}",
                "group": "gg_safety_behaviour",
                "order": {{ out_num }},
                "address": {{ 938 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1],
                "enum_titles": [
                    "Don't —Åhange output state",
                    "Switch output to safety state"
                ]
            },
            "out{{ out_num }}_safety_input_control": {
                "title": "K{{ out_num }}",
                "group": "gg_safety_input_control",
                "order": {{ out_num }},
                "address": {{ 946 + (out_num - 1) }},
                "reg_type": "holding",
                "default": 0,
                "enum": [0, 1, 2],
                "enum_titles": [
                    "Don't change",
                    "Disable in safety mode",
                    "Enable only in safety mode"
                ]
            },
            {% endfor -%}
        },

        "channels": [
            {% for lp_in_num in range(1, LP_INPUTS_NUMBER + 1) -%}
            {
                "name": "P{{ lp_in_num }}",
                "reg_type": "discrete",
                "address": {{ 9 + lp_in_num }},
                "type": "switch",
                "sporadic": false,
                "group": "counters"
            },
            {
                "name": "P{{ lp_in_num }} Counter",
                "reg_type": "input",
                "address": {{ 316 + 2 * (lp_in_num - 1) }},
                "type": "value",
                "format": "u32",
                "group": "counters"
            },
            {
                "name": "P{{ lp_in_num }} Counter Offset",
                "reg_type": "holding",
                "address": {{ 312 + 2 * (lp_in_num - 1) }},
                "type": "value",
                "format": "u32",
                "min": 0,
                "enabled": false,
                "group": "counters"
            },
            {% endfor -%}
            {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
            {
                "name": "F{{ in_num }}",
                "reg_type": "discrete",
                "address": {{ in_num - 1 }},
                "type": "switch",
                "sporadic": true,
                "condition": "isDefined(in{{ in_num }}_mode)&&in{{ in_num }}_mode!=3",
                "group": "input_f{{ in_num }}"
            },
            {
                "name": "F{{ in_num }}",
                "reg_type": "discrete",
                "address": {{ in_num - 1 }},
                "type": "switch",
                "sporadic": false,
                "condition": "isDefined(in{{ in_num }}_mode)==0||in{{ in_num }}_mode==3",
                "group": "input_f{{ in_num }}"
            },
            {
                "name": "F{{ in_num }} Counter",
                "reg_type": "input",
                "address": {{ 31 + in_num}},
                "type": "value",
                "sporadic": true,
                "condition": "isDefined(in{{ in_num }}_mode)&&in{{ in_num }}_mode!=3",
                "group": "input_f{{ in_num }}"
            },
            {
                "name": "F{{ in_num }} Counter",
                "reg_type": "input",
                "address": {{ 31 + in_num}},
                "type": "value",
                "sporadic": false,
                "condition": "isDefined(in{{ in_num }}_mode)==0||in{{ in_num }}_mode==3",
                "group": "input_f{{ in_num }}"
            },
            {% endfor -%}
            {% for out_num in range(1, OUTPUTS_NUMBER) -%}
            {
                "name": "K{{ out_num }}",
                "reg_type": "coil",
                "address": {{ out_num - 1 }},
                "type": "switch",
                "sporadic": true,
                "group": "outputs"
            },
            {% endfor -%}           
            {
                "name": "Alarm",
                "reg_type": "coil",
                "address": 2,
                "type": "switch",
                "sporadic": true,
                "group": "outputs"
            },
            {
                "name": "Serial",
                "reg_type": "input",
                "address": 270,
                "type": "text",
                "format": "u32",
                "group": "hw_info"
            },
            {
                "name": "FW Version",
                "reg_type": "input",
                "address": 250,
                "type": "text",
                "format": "string",
                "string_data_size": 16,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Input Voltage",
                "reg_type": "input",
                "address": 121,
                "type": "voltage",
                "scale": 0.001,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Uptime",
                "reg_type": "input",
                "address": 104,
                "type": "text",
                "format": "u32",
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "MCU Temperature",
                "reg_type": "input",
                "address": 124,
                "type": "temperature",
                "format": "s16",
                "scale": 0.1,
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "MCU Voltage",
                "reg_type": "input",
                "address": 123,
                "scale": 0.001,
                "type": "voltage",
                "enabled": false,
                "group": "hw_info"
            },
            {
                "name": "Battery freshness (2-0, measured at startup)",
                "reg_type": "input",
                "address": 118,
                "type": "value",
                "enabled": false,
                "sporadic": false,
                "group": "hw_info"
            },
            {
                "name": "Vout overloaded",
                "reg_type": "input",
                "address": 462,
                "type": "switch",
                "enabled": false,
                "sporadic": false,
                "group": "hw_info"
            },
            {
                "name": "Start cleaning mode timer (minutes)",
                "reg_type": "holding",
                "address": 975,
                "type": "value",
                "format": "u16",
                "min": 0,
                "max": 1440,
                "enabled": true,
                "group": "cleaning_mode"
            }
        ],
        "translations": {
            "en": {
                "WB-MWAC_template_title": "WB-MWAC v.2 (water leak and meters controller)",
                "baud_rate_description": "Make sure that communication with device is established before changing this parameter. Select required baud rate, save configuration and then change port baud rate to the same value.",
                "Uptime": "Uptime (s)",
                "inputs_control_in_safety_mode_description": "Sets change of control from the inputs when module switches to safety mode"
            },
            "ru": {
                "WB-MWAC_template_title": "WB-MWAC v.2 (–º–æ–¥—É–ª—å –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ—Ç–µ—á–µ–∫ –∏ —Ä–∞—Å—Ö–æ–¥–∞ –≤–æ–¥—ã)",
                "Counters": "–°—á–µ—Ç—á–∏–∫–∏",
                {% for in_num in range(1, INPUTS_NUMBER + 1) -%}
                "Input F{{ in_num }}": "–í—Ö–æ–¥ F{{ in_num }}",
                "Input F{{ in_num }} Mode": "–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –≤—Ö–æ–¥–∞ F{{ in_num }}",
                "Input F{{ in_num }} Debounce (ms)": "–í—Ä–µ–º—è –∑–∞—â–∏—Ç—ã –æ—Ç –¥—Ä–µ–±–µ–∑–≥–∞ –≤—Ö–æ–¥–∞ F{{ in_num }} (–º—Å)",
                "F{{ in_num }} Counter": "–°—á–µ—Ç—á–∏–∫ F{{ in_num }}",
                {% endfor -%}
                "Outputs": "–í—ã—Ö–æ–¥—ã",
                "General": "–û–±—â–µ–µ",
                "HW Info": "–î–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª—è",
                "push button": "–∫–Ω–æ–ø–∫–∞ –±–µ–∑ —Ñ–∏–∫—Å–∞—Ü–∏–∏",
                "latching switch": "–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Å —Ñ–∏–∫—Å–∞—Ü–∏–µ–π",
                "turn off all outputs": "–æ—Ç–∫–ª—é—á–∏—Ç—å –≤—Å–µ –≤—ã—Ö–æ–¥—ã",
                "control disabled": "—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ",
                "operate according to mapping-matrix": "—É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ mapping-–º–∞—Ç—Ä–∏—Ü–µ",
                "operate according to mapping-matrix, repeat action in 20 min if input still activated": "—É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ mapping-–º–∞—Ç—Ä–∏—Ü–µ; –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ 20 –º–∏–Ω., –µ—Å–ª–∏ –≤—Ö–æ–¥ –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
                "Restore Last Outputs State After Power On": "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å c–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã—Ö–æ–¥–æ–≤ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏",
                "no": "–Ω–µ—Ç",
                "yes": "–¥–∞",
                "Safety Timer (s)": "–¢–∞–π–º–∞—É—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ (—Å)",
                "Baud rate": "–°–∫–æ—Ä–æ—Å—Ç—å –æ–±–º–µ–Ω–∞",
                "baud_rate_description": "–ü–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–≤—è–∑—å —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±–º–µ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –∞ –∑–∞—Ç–µ–º —É–∫–∞–∂–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ—Ä—Ç–∞ —ç—Ç—É –∂–µ —Å–∫–æ—Ä–æ—Å—Ç—å.",
                {% for lp_in_num in range(1, LP_INPUTS_NUMBER + 1) -%}
                "P{{ lp_in_num }} Counter": "–°—á–µ—Ç—á–∏–∫ P{{ lp_in_num }}",
                "P{{ lp_in_num }} Counter Offset": "–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ P{{ lp_in_num }}",
                {% endfor -%}
                "Alarm": "–ê–≤–∞—Ä–∏—è",
                "Serial": "–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä",
                "FW Version": "–í–µ—Ä—Å–∏—è –ø—Ä–æ—à–∏–≤–∫–∏",
                "Input Voltage": "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è",
                "Uptime": "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–º–µ–Ω—Ç–∞ –≤–∫–ª—é—á–µ–Ω–∏—è (—Å)",
                "MCU Temperature": "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ú–ö",
                "MCU Voltage": "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –ø–∏—Ç–∞–Ω–∏—è –ú–ö",
                "Battery freshness (2-0, measured at startup)": "–°–≤–µ–∂–µ—Å—Ç—å –±–∞—Ç–∞—Ä–µ–π–∫–∏ (2-0, –∏–∑–º–µ—Ä–µ–Ω–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ)",
                "Vout overloaded": "–í—ã—Ö–æ–¥ Vout –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω",
                "Start cleaning mode timer (minutes)": "–ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ —Ä–µ–∂–∏–º–∞ —É–±–æ—Ä–∫–∏ (–º–∏–Ω—É—Ç—ã)",

                "Off": "–í—ã–∫–ª—é—á–µ–Ω",
                "On": "–í–∫–ª—é—á–µ–Ω",
                "Safety Mode": "–ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º",
                "Safety Behaviour": "–î–µ–π—Å—Ç–≤–∏–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "Don't —Åhange output state": "–ù–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å",
                "Switch output to safety state": "–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤—ã—Ö–æ–¥ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ",
                "Inputs Control In Safety Mode": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –≤—Ö–æ–¥–æ–≤ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "Don't change": "–ù–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                "Disable in safety mode": "–ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "Enable only in safety mode": "–†–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ",
                "Output Safe State": "–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã—Ö–æ–¥–æ–≤",
                "inputs_control_in_safety_mode_description": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –≤—Ö–æ–¥–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –º–æ–¥—É–ª—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–∂–∏–º",

                "no action / no action": "–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è / –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è",
                "no action / reset": "–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è / –≤—ã–∫–ª—é—á–∏—Ç—å",
                "no action / set": "–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è / –≤–∫–ª—é—á–∏—Ç—å",
                "no action / toggle": "–Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è / –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å",

                "reset / no action": "–≤—ã–∫–ª—é—á–∏—Ç—å / –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è",
                "reset / reset": "–≤—ã–∫–ª—é—á–∏—Ç—å / –≤—ã–∫–ª—é—á–∏—Ç—å",
                "reset / set": "–≤—ã–∫–ª—é—á–∏—Ç—å / –≤–∫–ª—é—á–∏—Ç—å",
                "reset / toggle": "–≤—ã–∫–ª—é—á–∏—Ç—å / –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å",

                "set / no action": "–≤–∫–ª—é—á–∏—Ç—å / –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è",
                "set / reset": "–≤–∫–ª—é—á–∏—Ç—å / –≤—ã–∫–ª—é—á–∏—Ç—å",
                "set / set": "–≤–∫–ª—é—á–∏—Ç—å / –≤–∫–ª—é—á–∏—Ç—å",
                "set / toggle": "–≤–∫–ª—é—á–∏—Ç—å / –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å",

                "toggle / no action": "–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å / –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è",
                "toggle / reset": "–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å / –≤—ã–∫–ª—é—á–∏—Ç—å",
                "toggle / set": "–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å / –≤–∫–ª—é—á–∏—Ç—å",
                "toggle / toggle": "–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å / –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å",
                "Actions for outputs when the input is closed / opened": "–î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–æ–≤ –ø—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏–∏ / —Ä–∞–∑–º—ã–∫–∞–Ω–∏–∏ –≤—Ö–æ–¥–∞"
            }
        }
    }
}
